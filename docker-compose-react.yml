version: '3.7'

services:
  frotend-react:
    depends_on:
      - "backend-flask"
    container_name: fe
    build:
      context: ./idp-pweb
      dockerfile: Dockerfile
    ports:
      - 3001:3000
    networks:
      - internal

  backend-flask:
    depends_on:
      - "mongo-database"
    container_name: be
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - 7020:7020
    networks:
      - internal

  worker-python:
    depends_on:
      - "rabbitmq"
    container_name: wp
    build:
      context: ./worker
      dockerfile: Dockerfile
    ports:
      - 9999:9999
    networks:
      - internal
    environment:
      - PYTHONUNBUFFERED=1

  mongo-database:
    depends_on:
      - "rabbitmq"
    image: mongo:latest
    hostname: mongo-database
    ports:
      - 27017:27017
    volumes:
      - ./mongo-data:/data/db
    networks:
      - internal

  rabbitmq:
    image: 'rabbitmq:management-alpine'
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - internal
    hostname: rabbitmq
      
  kong:
    image: kong:latest
    container_name: kong
    volumes:
      - ./kong:/usr/local/kong/declarative
    environment:
      KONG_DATABASE: 'off'
      KONG_DECLARATIVE_CONFIG: /usr/local/kong/declarative/kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
    ports:
      - 8000:8000
      - 8443:8443
      - 8001:8001
      - 8444:8444
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - internal

networks:
  internal:
    name: internal